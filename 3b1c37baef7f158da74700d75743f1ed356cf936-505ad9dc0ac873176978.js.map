{"version":3,"file":"3b1c37baef7f158da74700d75743f1ed356cf936-505ad9dc0ac873176978.js","mappings":"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","sources":["webpack://Main/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://Main/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://Main/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://Main/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://Main/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://Main/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://Main/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://Main/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://Main/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://Main/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://Main/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://Main/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://Main/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://Main/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://Main/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://Main/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://Main/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://Main/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://Main/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://Main/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://Main/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://Main/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://Main/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://Main/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://Main/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://Main/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://Main/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://Main/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://Main/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://Main/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://Main/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://Main/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://Main/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://Main/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://Main/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://Main/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://Main/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://Main/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://Main/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://Main/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://Main/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://Main/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://Main/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://Main/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://Main/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://Main/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://Main/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://Main/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://Main/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://Main/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://Main/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://Main/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://Main/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://Main/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://Main/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://Main/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack://Main/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://Main/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://Main/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://Main/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://Main/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://Main/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://Main/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://Main/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://Main/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://Main/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://Main/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://Main/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://Main/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://Main/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://Main/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://Main/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://Main/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://Main/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://Main/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://Main/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://Main/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://Main/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://Main/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://Main/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://Main/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://Main/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://Main/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://Main/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://Main/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://Main/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://Main/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://Main/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://Main/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://Main/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://Main/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://Main/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://Main/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://Main/./src/components/animations/Fade.js","webpack://Main/./node_modules/react-bootstrap/esm/ThemeProvider.js","webpack://Main/./node_modules/classnames/index.js"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n};\n\nexport { MotionGlobalConfig };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.18.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.18.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.18.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\n\nconst Fade = ({ \n  children, \n  bottom = false, \n  top = false, \n  left = false, \n  right = false,\n  distance = \"40px\", \n  duration = 0.6, \n  delay = 0,\n  cascade = false,\n  ...props \n}) => {\n  // Parse distance if it's a string with 'px'\n  const parseDistance = (dist) => {\n    if (typeof dist === 'string' && dist.includes('px')) {\n      return parseInt(dist.replace('px', ''));\n    }\n    return parseInt(dist) || 40;\n  };\n\n  const distanceValue = parseDistance(distance);\n\n  // Determine initial position based on direction\n  let initialY = 0;\n  let initialX = 0;\n  \n  if (bottom) initialY = distanceValue;\n  if (top) initialY = -distanceValue;\n  if (left) initialX = -distanceValue;\n  if (right) initialX = distanceValue;\n\n  // Base animation variants\n  const variants = {\n    hidden: { \n      opacity: 0, \n      y: initialY, \n      x: initialX \n    },\n    visible: { \n      opacity: 1, \n      y: 0, \n      x: 0,\n      transition: {\n        duration: duration / 1000, // Convert ms to seconds if needed\n        delay: delay / 1000,\n        ease: \"easeOut\"\n      }\n    }\n  };\n\n  // If cascade is true, stagger the children\n  if (cascade) {\n    return (\n      <motion.div\n        initial=\"hidden\"\n        whileInView=\"visible\"\n        viewport={{ once: true, margin: \"-100px\" }}\n        variants={{\n          visible: {\n            transition: {\n              staggerChildren: 0.1\n            }\n          }\n        }}\n        {...props}\n      >\n        {React.Children.map(children, (child, index) => (\n          <motion.div key={index} variants={variants}>\n            {child}\n          </motion.div>\n        ))}\n      </motion.div>\n    );\n  }\n\n  // Regular fade animation\n  return (\n    <motion.div\n      initial=\"hidden\"\n      whileInView=\"visible\"\n      viewport={{ once: true, margin: \"-100px\" }}\n      variants={variants}\n      {...props}\n    >\n      {children}\n    </motion.div>\n  );\n};\n\nexport default Fade;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport const DEFAULT_MIN_BREAKPOINT = 'xs';\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS,\n  minBreakpoint: DEFAULT_MIN_BREAKPOINT\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  minBreakpoint = DEFAULT_MIN_BREAKPOINT,\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: {\n      ...prefixes\n    },\n    breakpoints,\n    minBreakpoint,\n    dir\n  }), [prefixes, breakpoints, minBreakpoint, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useBootstrapMinBreakpoint() {\n  const {\n    minBreakpoint\n  } = useContext(ThemeContext);\n  return minBreakpoint;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent;\n  // If it's a functional component make sure we don't break it with a ref\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({\n    ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, {\n      ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","noop","any","Queue","constructor","this","order","scheduled","add","process","push","remove","index","splice","delete","clear","stepsOrder","schedule","cancel","cancelFrame","frameData","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","callback","keepAlive","immediate","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","performance","now","createRenderBatcher","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","MotionGlobalConfig","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","_ref","cascade","distanceValue","dist","initialY","initialX","hidden","visible","React","div","DEFAULT_BREAKPOINTS","ThemeContext","prefixes","breakpoints","minBreakpoint","Consumer","useBootstrapPrefix","prefix","defaultPrefix","useIsRTL","dir","hasOwn","classNames","classes","arg","appendClass","parseValue","apply","newClass","module","exports"],"sourceRoot":""}