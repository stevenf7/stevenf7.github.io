{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Container.js","webpack:///./src/pages/resume.js","webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/react-bootstrap/esm/ThemeProvider.js"],"names":["Container","_ref","ref","bsPrefix","fluid","as","Component","className","props","prefix","suffix","displayName","ResumeContent","language","useLanguage","resumeUrls","en","zh","resumeUrl","resumeTitle","getText","data","nav","resume","React","createElement","src","width","height","allow","title","Resume","Layout","SEO","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","appendClass","parseValue","Array","isArray","apply","toString","Object","prototype","includes","key","call","value","newClass","module","exports","default","DEFAULT_BREAKPOINTS","DEFAULT_MIN_BREAKPOINT","ThemeContext","prefixes","breakpoints","minBreakpoint","Consumer","Provider","useBootstrapPrefix","defaultPrefix","useIsRTL","dir"],"mappings":";6FAAA,6DAMA,MAAMA,EAAyB,aAAiB,CAACC,EAAMC,KACrD,IAAI,SACFC,EAAQ,MACRC,GAAQ,EAERC,GAAIC,EAAY,MAAK,UACrBC,KACGC,GACDP,EACJ,MAAMQ,EAAS,YAAmBN,EAAU,aACtCO,EAA0B,iBAAVN,EAAqB,IAAIA,EAAU,SACzD,OAAoB,cAAKE,EAAW,CAClCJ,IAAKA,KACFM,EACHD,UAAW,IAAWA,EAAWH,EAAQ,GAAGK,IAASC,IAAWD,OAGpET,EAAUW,YAAc,YACT,O,kCCxBf,gJASA,MAAMC,EAAgBA,KACpB,MAAM,SAAEC,GAAaC,cAGfC,EAAa,CACjBC,GAAI,4EACJC,GAAI,6EAGAC,EAAYH,EAAWF,IAAaE,EAAWC,GAC/CG,EAAcC,YAAQC,IAAKC,IAAIC,OAAQV,GAE7C,OACEW,IAAAC,cAACzB,IAAS,KACRwB,IAAAC,cAAA,UAAKN,GACLK,IAAAC,cAAA,UACEC,IAAKR,EACLS,MAAM,MACNC,OAAO,OACPC,MAAM,WACNtB,UAAU,SACVuB,MAAOX,GAENA,KAMM,SAASY,IACtB,OACEP,IAAAC,cAAA,WACED,IAAAC,cAACO,IAAM,KACLR,IAAAC,cAACQ,IAAG,CAACH,MAAM,WACXN,IAAAC,cAACb,EAAa,U,qBC3CtB,OAOA,WACE,aAEA,IAAIsB,EAAS,GAAGC,eAChB,SAASC,IAEP,IADA,IAAIC,EAAU,GACLC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAMF,UAAUD,GAChBG,IACFJ,EAAUK,EAAYL,EAASM,EAAWF,KAG9C,OAAOJ,EAET,SAASM,EAAWF,GAClB,GAAmB,iBAARA,GAAmC,iBAARA,EACpC,OAAOA,EAET,GAAmB,iBAARA,EACT,MAAO,GAET,GAAIG,MAAMC,QAAQJ,GAChB,OAAOL,EAAWU,MAAM,KAAML,GAEhC,GAAIA,EAAIM,WAAaC,OAAOC,UAAUF,WAAaN,EAAIM,SAASA,WAAWG,SAAS,iBAClF,OAAOT,EAAIM,WAEb,IAAIV,EAAU,GACd,IAAK,IAAIc,KAAOV,EACVP,EAAOkB,KAAKX,EAAKU,IAAQV,EAAIU,KAC/Bd,EAAUK,EAAYL,EAASc,IAGnC,OAAOd,EAET,SAASK,EAAYW,EAAOC,GAC1B,OAAKA,EAGDD,EACKA,EAAQ,IAAMC,EAEhBD,EAAQC,EALND,EAO0BE,EAAOC,SAC1CpB,EAAWqB,QAAUrB,EACrBmB,EAAOC,QAAUpB,QAKhB,KAFwB,EAAF,WACrB,OAAOA,GACR,QAFoB,OAEpB,aAnDL,I,yDCPA,8FAKO,MAAMsB,EAAsB,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,MACtDC,EAAyB,KAChCC,EAA4B,gBAAoB,CACpDC,SAAU,GACVC,YAAaJ,EACbK,cAAeJ,KAEX,SACJK,EAAQ,SACRC,GACEL,EAsBG,SAASM,EAAmBzD,EAAQ0D,GACzC,MAAM,SACJN,GACE,qBAAWD,GACf,OAAOnD,GAAUoD,EAASM,IAAkBA,EAcvC,SAASC,IACd,MAAM,IACJC,GACE,qBAAWT,GACf,MAAe,QAARS","file":"component---src-pages-resume-js-6a8e8c6c9b5b7601bf2d.js","sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Container = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    bsPrefix,\n    fluid = false,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    className,\n    ...props\n  } = _ref;\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nexport default Container;","import React from \"react\"\r\nimport SEO from \"../components/seo\"\r\nimport Layout from \"../components/layout\"\r\nimport \"../css/resume.scss\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport { useLanguage } from \"../contexts/LanguageContext\"\r\nimport data, { getText } from \"../data\"\r\n\r\n// Component that uses the language context - must be inside Layout\r\nconst ResumeContent = () => {\r\n  const { language } = useLanguage();\r\n  \r\n  // Resume PDF URLs - can be configured for different languages\r\n  const resumeUrls = {\r\n    en: \"https://drive.google.com/file/d/1fPQOUJndzVjnpf468iD_SXImoHbwJZ6j/preview\",\r\n    zh: \"https://drive.google.com/file/d/1fPQOUJndzVjnpf468iD_SXImoHbwJZ6j/preview\" // Same for now, can be updated later\r\n  };\r\n  \r\n  const resumeUrl = resumeUrls[language] || resumeUrls.en;\r\n  const resumeTitle = getText(data.nav.resume, language);\r\n\r\n  return (\r\n    <Container>\r\n      <h1>{resumeTitle}</h1>\r\n      <iframe \r\n        src={resumeUrl} \r\n        width=\"850\" \r\n        height=\"1100\" \r\n        allow=\"autoplay\" \r\n        className=\"Resume\" \r\n        title={resumeTitle}\r\n      >\r\n        {resumeTitle}\r\n      </iframe>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default function Resume() {\r\n  return (\r\n    <div>\r\n      <Layout>\r\n        <SEO title=\"Resume\" />\r\n        <ResumeContent />\r\n      </Layout>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n  function classNames() {\n    var classes = '';\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (arg) {\n        classes = appendClass(classes, parseValue(arg));\n      }\n    }\n    return classes;\n  }\n  function parseValue(arg) {\n    if (typeof arg === 'string' || typeof arg === 'number') {\n      return arg;\n    }\n    if (typeof arg !== 'object') {\n      return '';\n    }\n    if (Array.isArray(arg)) {\n      return classNames.apply(null, arg);\n    }\n    if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n      return arg.toString();\n    }\n    var classes = '';\n    for (var key in arg) {\n      if (hasOwn.call(arg, key) && arg[key]) {\n        classes = appendClass(classes, key);\n      }\n    }\n    return classes;\n  }\n  function appendClass(value, newClass) {\n    if (!newClass) {\n      return value;\n    }\n    if (value) {\n      return value + ' ' + newClass;\n    }\n    return value + newClass;\n  }\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","\"use client\";\n\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport const DEFAULT_MIN_BREAKPOINT = 'xs';\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS,\n  minBreakpoint: DEFAULT_MIN_BREAKPOINT\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\nfunction ThemeProvider(_ref) {\n  let {\n    prefixes = {},\n    breakpoints = DEFAULT_BREAKPOINTS,\n    minBreakpoint = DEFAULT_MIN_BREAKPOINT,\n    dir,\n    children\n  } = _ref;\n  const contextValue = useMemo(() => ({\n    prefixes: {\n      ...prefixes\n    },\n    breakpoints,\n    minBreakpoint,\n    dir\n  }), [prefixes, breakpoints, minBreakpoint, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useBootstrapMinBreakpoint() {\n  const {\n    minBreakpoint\n  } = useContext(ThemeContext);\n  return minBreakpoint;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent;\n  // If it's a functional component make sure we don't break it with a ref\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef((_ref2, ref) => {\n    let {\n      ...props\n    } = _ref2;\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, {\n      ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;"],"sourceRoot":""}