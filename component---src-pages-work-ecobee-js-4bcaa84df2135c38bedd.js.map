{"version":3,"file":"component---src-pages-work-ecobee-js-4bcaa84df2135c38bedd.js","mappings":"8MAQe,SAASA,IACtB,OACEC,EAAAA,cAAA,WACEA,EAAAA,cAACC,EAAAA,EAAM,KAELD,EAAAA,cAACE,EAAAA,EAAG,CAACC,MAAM,iCACXH,EAAAA,cAACI,EAAAA,EAAS,KACRJ,EAAAA,cAAA,UAAQK,UAAU,qBAChBL,EAAAA,cAAA,OAAKM,IAAKC,EAAAA,EAAWC,IAAI,YAAYH,UAAU,cAC/CL,EAAAA,cAAA,kBACEA,EAAAA,cAACS,EAAAA,EAAI,CAACC,QAAM,GACVV,EAAAA,cAAA,UAAI,+BACJA,EAAAA,cAAA,UAAI,uBACJA,EAAAA,cAAA,SAAG,0MAEDA,EAAAA,cAAA,WACAA,EAAAA,cAAA,WAAS,6HAETA,EAAAA,cAAA,WACAA,EAAAA,cAAA,WAAS,2NAETA,EAAAA,cAAA,WACAA,EAAAA,cAAA,WAAS,4MAU3B,C,4EClCA,MAAMI,EAAyB,aAAiB,EAC9CO,WACAC,SAAQ,EAERC,GAAIC,EAAY,MAChBT,eACGU,GACFC,KACD,MAAMC,GAAS,QAAmBN,EAAU,aACtCO,EAA0B,iBAAVN,EAAqB,IAAIA,IAAU,SACzD,OAAoB,SAAKE,EAAW,CAClCE,IAAKA,KACFD,EACHV,UAAW,IAAWA,EAAWO,EAAQ,GAAGK,IAASC,IAAWD,OAGpEb,EAAUe,YAAc,YACxB,K","sources":["webpack://Main/./src/pages/work/ecobee.js","webpack://Main/./node_modules/react-bootstrap/esm/Container.js"],"sourcesContent":["import React from \"react\"\nimport \"../../css/worksiteStyle.scss\"\nimport { Container } from \"react-bootstrap\"\nimport ecobeePic from \"../../images/workPhotos/ecobeeProduct.webp\"\nimport Fade from \"../../components/animations/Fade\"\nimport SEO from \"../../components/seo\"\nimport Layout from \"../../components/layout\"\n\nexport default function ecobeeTab() {\n  return (\n    <div>\n      <Layout>\n        {/* eslint-disable-next-line react/jsx-pascal-case */}\n        <SEO title=\"Embedded Developer at Ecobee\" />\n        <Container>\n          <figure className=\"position-relative\">\n            <img src={ecobeePic} alt=\"ecobeePic\" className=\"img-fluid\" />\n            <figcaption>\n              <Fade bottom>\n                <h1>Embedded Developer - Ecobee</h1>\n                <h2>05/2021 - 08/2021  </h2>\n                <p>\n                  - Built display testing pipeline using C++ OpenCV to detect discoloration, misalignment, dead pixels, and poor connections, capable of detecting alignment offsets of 0.5mm and dead pixels under 0.2mm\n                  <br></br>\n                  <br></br>\n                  - Prototyped LCD tests using Convolutional Neural Network and TensorFlow with 98% accuracy, won Best Internal Impact Award\n                  <br></br>\n                  <br></br>\n                  -\tGathered requirements, designed, and developed customer firmware flash and label printer software for the smart thermostats using C++/CLI and .NET framework, logging results using MongoDB, printing labels using ZPL\n                  <br></br>\n                  <br></br>\n                  -\tDrafted documentation and deployed customer firmware flash and label printer software at Wistron factory for Design Validation Test, projected to flash 80000+ units per month in full production\n                </p>\n              </Fade>\n            </figcaption>\n          </figure>\n        </Container>\n      </Layout>\n    </div>\n  )\n}\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nexport default Container;"],"names":["ecobeeTab","React","Layout","SEO","title","Container","className","src","ecobeePic","alt","Fade","bottom","bsPrefix","fluid","as","Component","props","ref","prefix","suffix","displayName"],"sourceRoot":""}