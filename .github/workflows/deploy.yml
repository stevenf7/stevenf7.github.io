name: Build and Deploy to GitHub Pages

on:
  push:
    branches: [ production ]  # Trigger when you push source code to main
  pull_request:
    branches: [ production ]  # Build check for PRs
  workflow_dispatch:

# Sets permissions to push to main branch
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-check:
    # This job runs on PRs to check if the build works
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          echo "üîß Installing dependencies..."
          npm install --legacy-peer-deps
          echo "‚úÖ Dependencies installed successfully"
        
      - name: Debug node_modules
        run: |
          echo "üìÅ Checking node_modules structure..."
          ls -la node_modules/@parcel/ 2>/dev/null || echo "‚ùå @parcel directory not found"
          echo "üîç Checking for watcher binaries..."
          find node_modules -name "*watcher*" -type f 2>/dev/null || echo "‚ùå No watcher files found"
          echo "üì¶ Checking npm list for @parcel/watcher..."
          npm list @parcel/watcher 2>/dev/null || echo "‚ùå @parcel/watcher not in npm list"
        
      - name: Install native dependencies explicitly
        run: |
          echo "üî® Installing @parcel/watcher explicitly..."
          npm install @parcel/watcher --legacy-peer-deps
          echo "üîß Rebuilding @parcel/watcher..."
          npm rebuild @parcel/watcher
          echo "‚úÖ Native dependencies installed"
        
      - name: Debug after native install
        run: |
          echo "üîç Checking @parcel/watcher after explicit install..."
          npm list @parcel/watcher
          echo "üìÅ Checking for Linux binaries..."
          find node_modules -name "*linux*" -type f 2>/dev/null || echo "‚ùå No Linux binaries found"
          echo "üêß Checking platform-specific files..."
          find node_modules/@parcel -name "*linux*" 2>/dev/null || echo "‚ùå No Linux-specific files in @parcel"
        
      - name: Clean Gatsby cache
        run: |
          echo "üßπ Cleaning Gatsby cache..."
          npx gatsby clean
          echo "‚úÖ Gatsby cache cleaned"
        
      - name: Build website
        run: |
          echo "üèóÔ∏è Starting build process..."
          echo "üîß Setting environment variables..."
          export GATSBY_DISABLE_FILE_WATCHER=true
          export GATSBY_DISABLE_WATCHER=true
          export NODE_ENV=production
          echo "üìã Environment variables set:"
          echo "  GATSBY_DISABLE_FILE_WATCHER=$GATSBY_DISABLE_FILE_WATCHER"
          echo "  GATSBY_DISABLE_WATCHER=$GATSBY_DISABLE_WATCHER"
          echo "  NODE_ENV=$NODE_ENV"
          echo "üöÄ Building with disabled watchers..."
          npm run build
          echo "‚úÖ Build completed successfully"
        env:
          # Pass the secret to the build process
          GATSBY_GA_MEASUREMENT_ID: ${{ secrets.GATSBY_GA_MEASUREMENT_ID }}

  build-and-deploy:
    # This job only runs on pushes to production branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/production'
    runs-on: ubuntu-latest  # Use latest Ubuntu for better performance
    
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'  # Use Node 18 for better compatibility
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          echo "üîß Installing dependencies..."
          npm install --legacy-peer-deps
          echo "‚úÖ Dependencies installed successfully"
        
      - name: Debug node_modules
        run: |
          echo "üìÅ Checking node_modules structure..."
          ls -la node_modules/@parcel/ 2>/dev/null || echo "‚ùå @parcel directory not found"
          echo "üîç Checking for watcher binaries..."
          find node_modules -name "*watcher*" -type f 2>/dev/null || echo "‚ùå No watcher files found"
          echo "üì¶ Checking npm list for @parcel/watcher..."
          npm list @parcel/watcher 2>/dev/null || echo "‚ùå @parcel/watcher not in npm list"
        
      - name: Install native dependencies explicitly
        run: |
          echo "üî® Installing @parcel/watcher explicitly..."
          npm install @parcel/watcher --legacy-peer-deps
          echo "üîß Rebuilding @parcel/watcher..."
          npm rebuild @parcel/watcher
          echo "‚úÖ Native dependencies installed"
        
      - name: Debug after native install
        run: |
          echo "üîç Checking @parcel/watcher after explicit install..."
          npm list @parcel/watcher
          echo "üìÅ Checking for Linux binaries..."
          find node_modules -name "*linux*" -type f 2>/dev/null || echo "‚ùå No Linux binaries found"
          echo "üêß Checking platform-specific files..."
          find node_modules/@parcel -name "*linux*" 2>/dev/null || echo "‚ùå No Linux-specific files in @parcel"
        
      - name: Clean Gatsby cache
        run: |
          echo "üßπ Cleaning Gatsby cache..."
          npx gatsby clean
          echo "‚úÖ Gatsby cache cleaned"
        
      - name: Build website
        run: |
          echo "üèóÔ∏è Starting build process..."
          echo "üîß Setting environment variables..."
          export GATSBY_DISABLE_FILE_WATCHER=true
          export GATSBY_DISABLE_WATCHER=true
          export NODE_ENV=production
          echo "üìã Environment variables set:"
          echo "  GATSBY_DISABLE_FILE_WATCHER=$GATSBY_DISABLE_FILE_WATCHER"
          echo "  GATSBY_DISABLE_WATCHER=$GATSBY_DISABLE_WATCHER"
          echo "  NODE_ENV=$NODE_ENV"
          echo "üöÄ Building with disabled watchers..."
          npm run build
          echo "‚úÖ Build completed successfully"
        env:
          # Pass the secret to the build process
          GATSBY_GA_MEASUREMENT_ID: ${{ secrets.GATSBY_GA_MEASUREMENT_ID }}
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './public'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4