name: Build and Deploy to GitHub Pages

on:
  push:
    branches: [ production ]  # Trigger when you push source code to main
  pull_request:
    branches: [ production ]  # Build check for PRs
  workflow_dispatch:

# Sets permissions to push to main branch
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-check:
    # This job runs on PRs to check if the build works
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Use Node 20 for better native dependency support
          cache: 'npm'
          
      - name: Install dependencies
        run: npm install --legacy-peer-deps
        
      - name: Handle native dependencies
        run: |
          # Try to install @parcel/watcher, but don't fail if it doesn't work
          npm install @parcel/watcher --legacy-peer-deps || echo "Warning: @parcel/watcher installation failed, continuing..."
          # If installation succeeded, try to rebuild
          if npm list @parcel/watcher > /dev/null 2>&1; then
            npm rebuild @parcel/watcher || echo "Warning: @parcel/watcher rebuild failed, continuing..."
          fi
          # Alternative: try to install platform-specific version
          npm install @parcel/watcher-linux-x64-glibc --legacy-peer-deps || echo "Warning: Linux-specific watcher installation failed, continuing..."
        
      - name: Clean Gatsby cache
        run: npx gatsby clean
        
      - name: Build website
        run: |
          export GATSBY_DISABLE_FILE_WATCHER=true
          export GATSBY_DISABLE_WATCHER=true
          export NODE_ENV=production
          # Set additional environment variables to avoid watcher issues
          export GATSBY_EXPERIMENTAL_DEV_SSR=false
          export GATSBY_EXPERIMENTAL_FAST_DEV=false
          # Try to disable any remaining watcher functionality
          export GATSBY_DISABLE_ESLINT_PLUGIN=true
          npm run build
        env:
          GATSBY_GA_MEASUREMENT_ID: ${{ secrets.GATSBY_GA_MEASUREMENT_ID }}

  build-and-deploy:
    # This job only runs on pushes to production branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/production'
    runs-on: ubuntu-latest  # Use latest Ubuntu for better performance
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Use Node 20 for better native dependency support
          cache: 'npm'
          
      - name: Install dependencies
        run: npm install --legacy-peer-deps
        
      - name: Handle native dependencies
        run: |
          # Try to install @parcel/watcher, but don't fail if it doesn't work
          npm install @parcel/watcher --legacy-peer-deps || echo "Warning: @parcel/watcher installation failed, continuing..."
          # If installation succeeded, try to rebuild
          if npm list @parcel/watcher > /dev/null 2>&1; then
            npm rebuild @parcel/watcher || echo "Warning: @parcel/watcher rebuild failed, continuing..."
          fi
          # Alternative: try to install platform-specific version
          npm install @parcel/watcher-linux-x64-glibc --legacy-peer-deps || echo "Warning: Linux-specific watcher installation failed, continuing..."
        
      - name: Clean Gatsby cache
        run: npx gatsby clean
        
      - name: Build website
        run: |
          export GATSBY_DISABLE_FILE_WATCHER=true
          export GATSBY_DISABLE_WATCHER=true
          export NODE_ENV=production
          # Set additional environment variables to avoid watcher issues
          export GATSBY_EXPERIMENTAL_DEV_SSR=false
          export GATSBY_EXPERIMENTAL_FAST_DEV=false
          # Try to disable any remaining watcher functionality
          export GATSBY_DISABLE_ESLINT_PLUGIN=true
          npm run build
        env:
          GATSBY_GA_MEASUREMENT_ID: ${{ secrets.GATSBY_GA_MEASUREMENT_ID }}
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './public'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4