name: Pull Request Build Check & Preview

on:
  pull_request:
    branches: [ production, main, master ]

# Add permissions for GitHub Pages and PR commenting
permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write  # Add permission to comment on PRs
  issues: write         # Add permission to comment on issues

jobs:
  build-check:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Use Node 20 for better native dependency support
          cache: 'npm'
          
      - name: Install dependencies
        run: npm install --legacy-peer-deps
        
      - name: Handle native dependencies
        run: |
          # Try to install @parcel/watcher, but don't fail if it doesn't work
          npm install @parcel/watcher --legacy-peer-deps || echo "Warning: @parcel/watcher installation failed, continuing..."
          # If installation succeeded, try to rebuild
          if npm list @parcel/watcher > /dev/null 2>&1; then
            npm rebuild @parcel/watcher || echo "Warning: @parcel/watcher rebuild failed, continuing..."
          fi
          # Alternative: try to install platform-specific version
          npm install @parcel/watcher-linux-x64-glibc --legacy-peer-deps || echo "Warning: Linux-specific watcher installation failed, continuing..."
        
      - name: Clean Gatsby cache
        run: npx gatsby clean
        
      - name: Build website
        run: |
          export GATSBY_DISABLE_FILE_WATCHER=true
          export GATSBY_DISABLE_WATCHER=true
          export NODE_ENV=production
          # Set additional environment variables to avoid watcher issues
          export GATSBY_EXPERIMENTAL_DEV_SSR=false
          export GATSBY_EXPERIMENTAL_FAST_DEV=false
          # Try to disable any remaining watcher functionality
          export GATSBY_DISABLE_ESLINT_PLUGIN=true
          npm run build
        env:
          GATSBY_GA_MEASUREMENT_ID: ${{ secrets.GATSBY_GA_MEASUREMENT_ID }}
          
      - name: Check build output
        run: |
          echo "✅ Build completed successfully!"
          echo "📁 Build output size: $(du -sh public | cut -f1)"
          echo "📄 Number of pages built: $(find public -name "*.html" | wc -l)"

  preview-deploy:
    runs-on: ubuntu-latest
    needs: build-check
    if: github.event_name == 'pull_request'
    environment:
      name: preview
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          # Ensure we have access to the PR context
          token: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Use Node 20 for better native dependency support
          cache: 'npm'
          
      - name: Install dependencies
        run: npm install --legacy-peer-deps
        
      - name: Handle native dependencies
        run: |
          # Try to install @parcel/watcher, but don't fail if it doesn't work
          npm install @parcel/watcher --legacy-peer-deps || echo "Warning: @parcel/watcher installation failed, continuing..."
          # If installation succeeded, try to rebuild
          if npm list @parcel/watcher > /dev/null 2>&1; then
            npm rebuild @parcel/watcher || echo "Warning: @parcel/watcher rebuild failed, continuing..."
          fi
          # Alternative: try to install platform-specific version
          npm install @parcel/watcher-linux-x64-glibc --legacy-peer-deps || echo "Warning: Linux-specific watcher installation failed, continuing..."
        
      - name: Clean Gatsby cache
        run: npx gatsby clean
        
      - name: Build website for preview
        run: |
          export GATSBY_DISABLE_FILE_WATCHER=true
          export GATSBY_DISABLE_WATCHER=true
          export NODE_ENV=production
          # Set additional environment variables to avoid watcher issues
          export GATSBY_EXPERIMENTAL_DEV_SSR=false
          export GATSBY_EXPERIMENTAL_FAST_DEV=false
          # Try to disable any remaining watcher functionality
          export GATSBY_DISABLE_ESLINT_PLUGIN=true
          npm run build
        env:
          GATSBY_GA_MEASUREMENT_ID: ${{ secrets.GATSBY_GA_MEASUREMENT_ID }}
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload preview artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './public'
          
      - name: Deploy preview
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          environment_name: preview
          
      - name: Comment preview URL (Primary Method)
        uses: actions/github-script@v7
        with:
          # Ensure we have the right permissions
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              const previewUrl = `${{ steps.deployment.outputs.page_url }}`;
              console.log(`Attempting to comment with preview URL: ${previewUrl}`);
              
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `🎉 **Preview Deployment Ready!**\n\nYour changes are now available for preview at:\n🔗 **${previewUrl}**\n\nThis preview will be automatically cleaned up when the PR is closed or merged.`
              });
              
              console.log('✅ Comment added successfully!');
            } catch (error) {
              console.error('❌ Failed to add comment:', error.message);
              // Don't fail the workflow if commenting fails
              console.log('Continuing with deployment...');
            }
          
      - name: Comment preview URL (Fallback Method)
        if: failure() && steps.deployment.outputs.page_url
        run: |
          echo "🎉 **Preview Deployment Ready!**" > comment.md
          echo "" >> comment.md
          echo "Your changes are now available for preview at:" >> comment.md
          echo "🔗 **${{ steps.deployment.outputs.page_url }}**" >> comment.md
          echo "" >> comment.md
          echo "This preview will be automatically cleaned up when the PR is closed or merged." >> comment.md
          
          # Try to use GitHub CLI as fallback
          gh pr comment ${{ github.event.number }} --body-file comment.md || echo "Fallback commenting also failed, but deployment succeeded" 