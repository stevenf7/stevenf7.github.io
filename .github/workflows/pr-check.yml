name: Pull Request Build Check & Preview

on:
  pull_request:
    branches: [ production, main, master ]

# Add permissions for GitHub Pages and PR commenting
permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write  # Add permission to comment on PRs
  issues: write         # Add permission to comment on issues

jobs:
  build-check:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Use Node 20 for better native dependency support
          cache: 'npm'
          
      - name: Install dependencies
        run: npm install --legacy-peer-deps
        
      - name: Handle native dependencies
        run: |
          # Try to install @parcel/watcher, but don't fail if it doesn't work
          npm install @parcel/watcher --legacy-peer-deps || echo "Warning: @parcel/watcher installation failed, continuing..."
          # If installation succeeded, try to rebuild
          if npm list @parcel/watcher > /dev/null 2>&1; then
            npm rebuild @parcel/watcher || echo "Warning: @parcel/watcher rebuild failed, continuing..."
          fi
          # Alternative: try to install platform-specific version
          npm install @parcel/watcher-linux-x64-glibc --legacy-peer-deps || echo "Warning: Linux-specific watcher installation failed, continuing..."
        
      - name: Clean Gatsby cache
        run: npx gatsby clean
        
      - name: Build website
        run: |
          export GATSBY_DISABLE_FILE_WATCHER=true
          export GATSBY_DISABLE_WATCHER=true
          export NODE_ENV=production
          # Set additional environment variables to avoid watcher issues
          export GATSBY_EXPERIMENTAL_DEV_SSR=false
          export GATSBY_EXPERIMENTAL_FAST_DEV=false
          # Try to disable any remaining watcher functionality
          export GATSBY_DISABLE_ESLINT_PLUGIN=true
          npm run build
        env:
          GATSBY_GA_MEASUREMENT_ID: ${{ secrets.GATSBY_GA_MEASUREMENT_ID }}
          
      - name: Check build output
        run: |
          echo "‚úÖ Build completed successfully!"
          echo "üìÅ Build output size: $(du -sh public | cut -f1)"
          echo "üìÑ Number of pages built: $(find public -name "*.html" | wc -l)"

  preview-deploy:
    runs-on: ubuntu-latest
    needs: build-check
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          # Ensure we have access to the PR context
          token: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Use Node 20 for better native dependency support
          cache: 'npm'
          
      - name: Install dependencies
        run: npm install --legacy-peer-deps
        
      - name: Handle native dependencies
        run: |
          # Try to install @parcel/watcher, but don't fail if it doesn't work
          npm install @parcel/watcher --legacy-peer-deps || echo "Warning: @parcel/watcher installation failed, continuing..."
          # If installation succeeded, try to rebuild
          if npm list @parcel/watcher > /dev/null 2>&1; then
            npm rebuild @parcel/watcher || echo "Warning: @parcel/watcher rebuild failed, continuing..."
          fi
          # Alternative: try to install platform-specific version
          npm install @parcel/watcher-linux-x64-glibc --legacy-peer-deps || echo "Warning: Linux-specific watcher installation failed, continuing..."
        
      - name: Clean Gatsby cache
        run: npx gatsby clean
        
      - name: Build website for preview
        run: |
          export GATSBY_DISABLE_FILE_WATCHER=true
          export GATSBY_DISABLE_WATCHER=true
          export NODE_ENV=production
          # Set additional environment variables to avoid watcher issues
          export GATSBY_EXPERIMENTAL_DEV_SSR=false
          export GATSBY_EXPERIMENTAL_FAST_DEV=false
          # Try to disable any remaining watcher functionality
          export GATSBY_DISABLE_ESLINT_PLUGIN=true
          npm run build
        env:
          GATSBY_GA_MEASUREMENT_ID: ${{ secrets.GATSBY_GA_MEASUREMENT_ID }}
          
      - name: Deploy to preview branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          destination_dir: preview/pr-${{ github.event.number }}
          
      - name: Comment preview URL
        uses: actions/github-script@v7
        with:
          # Ensure we have the right permissions
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              const previewUrl = `https://${context.repo.owner}.github.io/${context.repo.repo}/preview/pr-${context.issue.number}/`;
              console.log(`Attempting to comment with preview URL: ${previewUrl}`);
              
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `üéâ **Preview Deployment Ready!**\n\nYour changes are now available for preview at:\nüîó **${previewUrl}**\n\nThis preview will be automatically cleaned up when the PR is closed or merged.`
              });
              
              console.log('‚úÖ Comment added successfully!');
            } catch (error) {
              console.error('‚ùå Failed to add comment:', error.message);
              // Don't fail the workflow if commenting fails
              console.log('Continuing with deployment...');
            } 